{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","console","log","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8b6f626.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__kw90Z\",\"card\":\"Cards_card__3HHsT\",\"infected\":\"Cards_infected__opqox\",\"recovered\":\"Cards_recovered__N46NS\",\"deaths\":\"Cards_deaths__3JyIj\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    if(!confirmed){\r\n        return 'Chargement ...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infectés</Typography>\r\n                        <Typography variant=\"h5\">\r\n                           <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString('fr-FR')}</Typography>\r\n                        <Typography variant=\"body2\">Nombre de cas actif du COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Soignés</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString('fr-FR')}</Typography>\r\n                        <Typography variant=\"body2\">Nombre de cas soignés du COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Morts</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString('fr-FR')}</Typography>\r\n                        <Typography variant=\"body2\">Nombre de mort liés au COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const { data : { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed,  recovered,  deaths,  lastUpdate, };\r\n\r\n    } catch (error){\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async ()=>{\r\n    try{\r\n      const { data } = await axios.get(`${url}/daily`);\r\n\r\n      const modifiedData = data.map((dailyData)=>({\r\n          confirmed: dailyData.confirmed.total,\r\n          deaths: dailyData.deaths.total,\r\n          date: dailyData.reportDate,\r\n      }));\r\n\r\n      return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error){\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: {confirmed, deaths, recovered}, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\nconst lineChart = (\r\n    dailyData.length\r\n        ?(\r\n        <Line\r\n        data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label : 'Infectés',\r\n                borderColor : '#3333ff',\r\n                fill : true,\r\n            }, {\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label : 'Morts',\r\n                borderColor : 'red',\r\n                backgroundColor : 'rgba(255, 0, 0, 0.5)',\r\n                fill : true,\r\n            }],\r\n        }}\r\n\r\n    />) : null\r\n);\r\n\r\nconst barChart = (\r\n    confirmed\r\n    ?(\r\n        <Bar\r\n            data={{\r\n                labels: ['Infectés', 'Soignés', 'Morts'],\r\n                datasets: [{\r\n                    label: 'Personnes',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                        ],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options={{\r\n                legend : { display: false },\r\n                title: { display: true, text:`Actuellement en ${country}`}\r\n            }}\r\n        />\r\n        ) : null\r\n);\r\n\r\nreturn(\r\n    <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport  { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n                <option value =\"global\">Monde</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\n\r\nimport{ Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from \"./api\";\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data :{},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country });\r\n\r\n        console.log(country);\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange ={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2j76U\",\"image\":\"App_image__3ua7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3sduP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3kKFp\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}